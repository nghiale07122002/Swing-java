/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Tivi;

import PRODUCTMANAGER.TV;
import PRODUCTMANAGER.TVimpl;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class QuanLyTiviPanel extends javax.swing.JPanel {
    private List<TV> list = new ArrayList();
    private DefaultTableModel model;
    private TVimpl ds = new TVimpl();
    FileWriter fw;
    BufferedWriter bw;
    FileReader fr;
    BufferedReader br;
    private String[] colums = new String[]{"PRODUCT ID","NAME","PRICE","TOTAL","OPERATINGSYSTEM","RESOLUTION","TRADEMARK"};
    /**
     * Creates new form ProductFrame
     */
    
    private void initData(){
        list =readFile();
    }
    
    private void inittable(){
        model = new DefaultTableModel();
        model.setColumnIdentifiers(colums);
        list.forEach(item->{
            model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getTv_operatingSystem(),item.getTv_resolution(),item.getTv_trademark()});
        });
        jtbTable.setModel(model);
    }
    /**
     * Creates new form QuanLyTiviPanel
     */
    public QuanLyTiviPanel() {
        initComponents();
        initData();
        inittable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPRODUCTID = new javax.swing.JTextField();
        txtNAME = new javax.swing.JTextField();
        txtPRICE = new javax.swing.JTextField();
        txtTOTAL = new javax.swing.JTextField();
        txtOPERATINGSYSTEM = new javax.swing.JTextField();
        txtRESOLUTION = new javax.swing.JTextField();
        txtTRADEMARK = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbTable = new javax.swing.JTable();
        jButtonADD = new javax.swing.JButton();
        jButtonEDIT = new javax.swing.JButton();
        jButtonDEL = new javax.swing.JButton();
        jButtonNEW = new javax.swing.JButton();
        jButtonSEARCH = new javax.swing.JButton();
        jButtonSORTBYNAME = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jButtonSORTBYGIA = new javax.swing.JButton();
        jButtonCanelSort = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Price");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Total");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("OperatingSystem");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Resolution");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("TradeMark");

        txtPRODUCTID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtNAME.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtPRICE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtTOTAL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtOPERATINGSYSTEM.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtOPERATINGSYSTEM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOPERATINGSYSTEMActionPerformed(evt);
            }
        });

        txtRESOLUTION.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtTRADEMARK.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtTRADEMARK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTRADEMARKActionPerformed(evt);
            }
        });

        jtbTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbTable.setGridColor(new java.awt.Color(0, 0, 0));
        jtbTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtbTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtbTable);

        jButtonADD.setBackground(new java.awt.Color(255, 204, 153));
        jButtonADD.setText("Thêm");
        jButtonADD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });

        jButtonEDIT.setBackground(new java.awt.Color(255, 204, 153));
        jButtonEDIT.setText("Sửa");
        jButtonEDIT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEDIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEDITActionPerformed(evt);
            }
        });

        jButtonDEL.setBackground(new java.awt.Color(255, 204, 153));
        jButtonDEL.setText("Xóa");
        jButtonDEL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELActionPerformed(evt);
            }
        });

        jButtonNEW.setBackground(new java.awt.Color(255, 204, 153));
        jButtonNEW.setText("Resert");
        jButtonNEW.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonNEW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNEWActionPerformed(evt);
            }
        });

        jButtonSEARCH.setBackground(new java.awt.Color(255, 204, 0));
        jButtonSEARCH.setText("Tìm kiếm");
        jButtonSEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSEARCHActionPerformed(evt);
            }
        });

        jButtonSORTBYNAME.setBackground(new java.awt.Color(255, 153, 51));
        jButtonSORTBYNAME.setText("Sắp xếp theo tên");
        jButtonSORTBYNAME.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonSORTBYNAME.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSORTBYNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSORTBYNAMEActionPerformed(evt);
            }
        });

        jButtonSORTBYGIA.setBackground(new java.awt.Color(255, 153, 51));
        jButtonSORTBYGIA.setText("Sắp xếp theo giá");
        jButtonSORTBYGIA.setBorder(null);
        jButtonSORTBYGIA.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jButtonSORTBYGIA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSORTBYGIAActionPerformed(evt);
            }
        });

        jButtonCanelSort.setBackground(new java.awt.Color(255, 153, 51));
        jButtonCanelSort.setText("Hủy sắp xếp");
        jButtonCanelSort.setBorder(null);
        jButtonCanelSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCanelSortActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel9.setText("Thông tin chi tiết");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 102, 255));
        jLabel10.setText("QUẢN LÝ TI VI");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3))
            .addComponent(jSeparator4)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jButtonADD)
                                .addGap(75, 75, 75)
                                .addComponent(jButtonEDIT)
                                .addGap(77, 77, 77)
                                .addComponent(jButtonDEL)
                                .addGap(63, 63, 63)
                                .addComponent(jButtonNEW))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtPRODUCTID, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                            .addComponent(txtNAME)
                                            .addComponent(txtPRICE)
                                            .addComponent(txtTOTAL))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtOPERATINGSYSTEM, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                            .addComponent(txtRESOLUTION)
                                            .addComponent(txtTRADEMARK)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(253, 253, 253)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(214, 214, 214)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(jSeparator1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButtonSORTBYNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButtonSORTBYGIA, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCanelSort, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(339, 339, 339)
                .addComponent(jButtonSEARCH)
                .addContainerGap(448, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPRODUCTID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOPERATINGSYSTEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRESOLUTION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTRADEMARK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPRICE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTOTAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNEW)
                    .addComponent(jButtonDEL)
                    .addComponent(jButtonEDIT)
                    .addComponent(jButtonADD))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSORTBYNAME, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCanelSort, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSORTBYGIA, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSEARCH)))
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTRADEMARKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTRADEMARKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTRADEMARKActionPerformed

    private void txtOPERATINGSYSTEMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOPERATINGSYSTEMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOPERATINGSYSTEMActionPerformed

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
        try {
            StringBuilder error = new StringBuilder();
            if(txtPRODUCTID.getText().equals("")){
                error.append("ProductID has not been entered");
            }
            if(txtNAME.getText().equals("")){
                error.append("\nName has not been entered");
            }
            if(txtPRICE.getText().equals("")){
                error.append("\nPrice has not been entered");
            }
            if(txtTOTAL.getText().equals("")){
                error.append("\nTotal has not been entered");
            }
            if(txtOPERATINGSYSTEM.getText().equals("")){
                error.append("\nOperatingSystem has not been entered");
            }
            if(txtRESOLUTION.getText().equals("")){
                error.append("\nResolution has not been entered");
            }
            if(txtTRADEMARK.getText().equals("")){
                error.append("\nTrademark has not been entered");
            }
            if(!error.isEmpty()){
                JOptionPane.showMessageDialog(this, error.toString());
                return;
            }
            TV tv = new TV();
            tv.setProduct_ID(txtPRODUCTID.getText());
            tv.setProduct_name(txtNAME.getText());
            tv.setProduct_price(Integer.parseInt(txtPRICE.getText()));
            tv.setProduct_total(Integer.parseInt(txtTOTAL.getText()));
            tv.setTv_operatingSystem(txtOPERATINGSYSTEM.getText());
            tv.setTv_resolution(txtRESOLUTION.getText());
            tv.setTv_trademark(txtTRADEMARK.getText());
            boolean isExisted = false;
            for(int i=0;i<list.size();i++){
                TV t = list.get(i);
                if(t.getProduct_ID().equals(tv.getProduct_ID())){
                    JOptionPane.showMessageDialog(this, "ID is existed");
                    isExisted = true;
                    break;
                }
            }
            if(!isExisted){
                list.add(tv);
                UpdateTable(list);
                JOptionPane.showMessageDialog(this,"Object add success");
                writeFile();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jButtonEDITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEDITActionPerformed
        try {
            if(txtPRODUCTID.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Please click product need to fix");
                return;
            }
            if(JOptionPane.showConfirmDialog(this,"Do you want to fix product:" + txtPRODUCTID.getText(),"Confirm",JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION){
                return;
            }
            boolean isInsert = false;
            for(int i=0;i<list.size();i++){
                TV item = list.get(i);
                if(item.getProduct_ID().equals(txtPRODUCTID.getText())){
                    item.setProduct_name(txtNAME.getText());
                    item.setProduct_price(Integer.parseInt(txtPRICE.getText()));
                    item.setProduct_total(Integer.parseInt(txtTOTAL.getText()));
                    item.setTv_operatingSystem(txtOPERATINGSYSTEM.getText());
                    item.setTv_resolution(txtRESOLUTION.getText());
                    item.setTv_trademark(txtTRADEMARK.getText());
                    isInsert = true;
                }
            }
            if(isInsert){
                JOptionPane.showMessageDialog(this, "Product is insert");
                model.setRowCount(0);
                UpdateTable(list);
                writeFile();
                jButtonNEWActionPerformed(evt);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButtonEDITActionPerformed

    private void jButtonNEWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNEWActionPerformed
        txtNAME.setText("");
        txtPRODUCTID.setText("");
        txtPRICE.setText("");
        txtTOTAL.setText("");
        txtOPERATINGSYSTEM.setText("");
        txtRESOLUTION.setText("");
        txtTRADEMARK.setText("");
    }//GEN-LAST:event_jButtonNEWActionPerformed

    private void jButtonDELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELActionPerformed
        try {
            if(txtPRODUCTID.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Please click product need to delete");
                return;
            }
            if(JOptionPane.showConfirmDialog(this,"Do you want to delete product:" + txtPRODUCTID.getText(),"Confirm",JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION){
                return;
            }
            boolean isDeleted = false;
            for(int i=0;i<list.size();i++){
                TV item = list.get(i);
                if(item.getProduct_ID().equals(txtPRODUCTID.getText())){
                    list.remove(i);
                    isDeleted = true;
                    break;
                }
            }
            if(isDeleted){
                JOptionPane.showMessageDialog(this, "Product is deleted");
                model.setRowCount(0);
                list.forEach(item ->{
                    model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getTv_operatingSystem(),item.getTv_resolution(),item.getTv_trademark()});
                });
                model.fireTableDataChanged();
                writeFile();
                jButtonNEWActionPerformed(evt);
            }else{
                JOptionPane.showMessageDialog(this, "Product not found");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButtonDELActionPerformed

    private void jButtonSORTBYNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSORTBYNAMEActionPerformed
        list.sort((o1, o2) -> CharSequence.compare(o1.getProduct_name(),o2.getProduct_name()));
        UpdateTable(list);
    }//GEN-LAST:event_jButtonSORTBYNAMEActionPerformed

    private void jButtonSORTBYGIAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSORTBYGIAActionPerformed
        list.sort((o1,o2) -> Double.compare(o1.getProduct_price(), o2.getProduct_price()));
        UpdateTable(list);
    }//GEN-LAST:event_jButtonSORTBYGIAActionPerformed

    private void jButtonCanelSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCanelSortActionPerformed
        List<TV> ds = new ArrayList<>();
        ds = readFile();
        model.setRowCount(0);
        ds.forEach(item ->{
            model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getTv_operatingSystem(),item.getTv_resolution(),item.getTv_trademark()});
        });
        model.fireTableDataChanged();
    }//GEN-LAST:event_jButtonCanelSortActionPerformed

    private void jtbTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTableMousePressed
        int selectedRow = jtbTable.getSelectedRow();
        if(selectedRow >= 0){
            TV tv = list.get(selectedRow);
            txtPRODUCTID.setText(tv.getProduct_ID());
            txtNAME.setText(tv.getProduct_name());
            txtPRICE.setText(""+tv.getProduct_price());
            txtTOTAL.setText(""+tv.getProduct_total());
            txtOPERATINGSYSTEM.setText(tv.getTv_operatingSystem());
            txtRESOLUTION.setText(tv.getTv_resolution());
            txtTRADEMARK.setText(tv.getTv_trademark());
        } 
    }//GEN-LAST:event_jtbTableMousePressed

    private void jButtonSEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSEARCHActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SEARCH().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButtonSEARCHActionPerformed
    public void writeFile(){
        try {
            fw = new FileWriter("src\\Tivi\\Product.bin");
            bw = new BufferedWriter(fw);
            for(TV temp: list){
                bw.write(temp.toString());
                bw.newLine();
            }
            System.out.println("Success");
            bw.close();
            fw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
        
    public List<TV> readFile(){
            List<TV> ds = new ArrayList<>();
            try {
                fr = new FileReader("src\\Tivi\\Product.bin");
                br = new BufferedReader(fr);
                String line = " ";
                while(true){
                    line = br.readLine();
                    if(line == null){
                        break;
                    }
                    String[] txt = line.split("--");
                    String ID = txt[0];
                    String name = txt[1];
                    int price = Integer.parseInt(txt[2]);
                    int total = Integer.parseInt(txt[3]);
                    String os = txt[4];
                    String rso = txt[5];
                    String tm = txt[6];
                    ds.add(new TV(ID, name , price, total, os, rso, tm));
                }
                br.close();
                fr.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return ds;
        }
    private void UpdateTable(List<TV> list){
        model.setRowCount(0);
        list.forEach(item ->{
                    model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getTv_operatingSystem(),item.getTv_resolution(),item.getTv_trademark()});
        });
        model.fireTableDataChanged();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonCanelSort;
    private javax.swing.JButton jButtonDEL;
    private javax.swing.JButton jButtonEDIT;
    private javax.swing.JButton jButtonNEW;
    private javax.swing.JButton jButtonSEARCH;
    private javax.swing.JButton jButtonSORTBYGIA;
    private javax.swing.JButton jButtonSORTBYNAME;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jtbTable;
    private javax.swing.JTextField txtNAME;
    private javax.swing.JTextField txtOPERATINGSYSTEM;
    private javax.swing.JTextField txtPRICE;
    private javax.swing.JTextField txtPRODUCTID;
    private javax.swing.JTextField txtRESOLUTION;
    private javax.swing.JTextField txtTOTAL;
    private javax.swing.JTextField txtTRADEMARK;
    // End of variables declaration//GEN-END:variables
}
