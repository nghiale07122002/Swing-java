/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package INTERIORMANAGER;

import PRODUCTMANAGER.Interior;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author IT Supporter
 */
public class SEARCHIN extends javax.swing.JFrame {

    /**
     * Creates new form SEARCH
     */
    List<Interior> list = new ArrayList<>();
    List<Interior> list1 = new ArrayList<>();
    List<Interior> searchList = new ArrayList<>();
    private DefaultTableModel model;
    private String[] colums = new String[]{"PRODUCT ID","NAME","PRICE","TOTAL","OPERATINGSYSTEM","RESOLUTION","TRADEMARK"};
    public SEARCHIN() {
        initComponents();
        setLocationRelativeTo(null);
        initData();
        inittable();
    }
    private void initData(){
        list1 = searchList ;
    }
    
    private void inittable(){
        model = new DefaultTableModel();
        model.setColumnIdentifiers(colums);
        list1.forEach(item->{
            model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getInterior_Material(),item.getInterior_Weight(),item.getInterior_Color()});
        });
        jTable1.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSEARCHBYNAME = new javax.swing.JButton();
        jTextFieldSEARCH = new javax.swing.JTextField();
        jButtonSEARCHBYID = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonSEARCHBYNAME.setText("SEARCHBYNAME");
        jButtonSEARCHBYNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSEARCHBYNAMEActionPerformed(evt);
            }
        });

        jButtonSEARCHBYID.setText("SEARCHBYID");
        jButtonSEARCHBYID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSEARCHBYIDActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 51));
        jLabel2.setText("nhập tên hoặc ID cần tìm");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(jButtonSEARCHBYNAME)
                        .addGap(42, 42, 42)
                        .addComponent(jButtonSEARCHBYID))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jTextFieldSEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(264, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSEARCHBYNAME)
                    .addComponent(jButtonSEARCHBYID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSEARCHBYNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSEARCHBYNAMEActionPerformed
        list = readFile();
        if(jTextFieldSEARCH.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please Input Name need to search:");
            return;
        }
        searchList.clear();
        for(int i=0;i<list.size();i++){
            Interior temp = list.get(i);
            if(jTextFieldSEARCH.getText().equals(temp.getProduct_name())){
                searchList.add(temp);
            }
        }
        if(searchList.isEmpty()){
            JOptionPane.showMessageDialog(this, "Not Existed");
            return;
        }
        int n = model.getRowCount();
        while(n-- != 0){
            System.out.println("1");
            model.removeRow(0);
        }
        searchList.forEach(item ->{
            model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getInterior_Material(),item.getInterior_Weight(),item.getInterior_Color()});
        });
    }//GEN-LAST:event_jButtonSEARCHBYNAMEActionPerformed

    private void jButtonSEARCHBYIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSEARCHBYIDActionPerformed
        list = readFile();
        if(jTextFieldSEARCH.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please Input ID need to search:");
            return;
        }
        searchList.clear();
        for(int i=0;i<list.size();i++){
            Interior temp = list.get(i);
            if(jTextFieldSEARCH.getText().equals(temp.getProduct_ID())){
                searchList.add(temp);
            }
        }
        if(searchList.isEmpty()){
            JOptionPane.showMessageDialog(this, "Not Existed");
            return;
        }
        int n = model.getRowCount();
        while(n-- != 0){
            System.out.println("1");
            model.removeRow(0);
        }
        searchList.forEach(item ->{
            model.addRow(new Object[]{item.getProduct_ID(),item.getProduct_name(),item.getProduct_price(),item.getProduct_total(),item.getInterior_Material(),item.getInterior_Weight(),item.getInterior_Color()});
        });
    }//GEN-LAST:event_jButtonSEARCHBYIDActionPerformed
        public List<Interior> readFile(){
            List<Interior> ds = new ArrayList<>();
            try {
                FileReader fr = new FileReader("src\\INTERIORMANAGER\\Interior.bin");
                BufferedReader br = new BufferedReader(fr);
                String line = " ";
                while(true){
                    line = br.readLine();
                    if(line == null){
                        break;
                    }
                    String[] txt = line.split("-");
                    String ID = txt[0];
                    String name = txt[1];
                    int price = Integer.parseInt(txt[2]);
                    int total = Integer.parseInt(txt[3]);
                    String os = txt[4];
                    float w = Float.parseFloat(txt[5]); 
                    String tm = txt[6];
                    ds.add(new Interior(ID, name , price, total, os, w, tm));
                }
                br.close();
                fr.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return ds;
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SEARCHIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SEARCHIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SEARCHIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SEARCHIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SEARCHIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSEARCHBYID;
    private javax.swing.JButton jButtonSEARCHBYNAME;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldSEARCH;
    // End of variables declaration//GEN-END:variables
}
